#summary One-sentence summary of this page.

= Introduction =

Add your content here.


= Details =


Minutes Taker
  * Bryan Winther
  * Rotating minutes taker weekly.
Meeting Manager next week
  * Mark Pasquier will will manage all meetings until selected later


SVN Issues:
 # svn commit -f <filename.txt>
  *Text file includes commit log message
 # svn commit -m <commit log message>
 # If there have been revisions between your checkout and your commit:
  *Delete local files, update, then make your changes
  *When you try to update, a "c" will be placed next to the files that have conflict with the files on GoogleCode
 
 
 Updates:
 Mike
  *Inputting a new user options:
   # On index.php could have login and "create new user"
  *  Could add new fields to user table with "email" "activated"
  *  Email would be sent to activate the account
  *  Any initial capabilities?  No.
  # All from the inside; a request would have to be sent to the administrator
  *  Administrator would have to go in and fill out all the details to get access.
  *  A new administrator branch would need to be built into the DB with capabilities to change user details.
  *  Leaning towards this option.
  # New sitemap will be created and distributed

 Mark
   *Cookies vs. Session Variables
    **Session variables are chosen for security reasons.  Cookies would be much more easily spoofed.
  **All setup throughout site

 Access Levels
 Discussed options:
   # Search
   # Update
   # Insert
   # Delete
         or
   # Write only
   # Read only
   # Read and Write

 If users don't have the adequate access level, wrap the unavailable capabilities in a session variable and simply do  not display them.

 If there is an administrator, give them the option to select access level when they are inputting the new user.

 Matt
 Input Validation
  *Checks if it is alpha, alphanumeric, email, digit, etc.
    **Could also add ZIP, state checkers to make sure that they are valid (not just alphanumeric ex. MP in state is invalid)
  **After a submission, if it is valid, the user is sent to a print page that shows inputs.  Has option to go back and change.
  **If it is invalid, comment is shown stating that there are invalid inputs and present the previous form again for updating.
  **Works on orchestra (ND webspace), but does not work on the oneeach webspace
  **Once debugged, a matter of just applying to other sites.

 Bryan
   *Inputted iframe into all other pages.
   *Cleaned up some of HTML

 Alyssa/Chris
   *Familiarization with project
   *Question: Contract/Facility Survey
     **Statement of understanding - yearly contract that states that a given resource will be provided given an emergency.  Is a scanned PDF, then uploaded to webspace.
     **Facility Survey - Describes what a facility CAN provide (ie quantity of rooms)



  *Created test folders on oneeach for each team member
    **To do: link test folders to test database

   *Close to being able to deliver
     **New users is last "invention" that must be put in place
     **Also the ability to maintain users
     **Need to be able to link existing records together
     **Adding resources to existing records
     **Go to info page after you add an organization
     **From there, you can add new resources or update details
 
 Things to do:
 Mike
  *Add users/Manage users
 
 Bryan
   *Link database
   *Search results should go to info page
 
 Matt
   *Continue with validation
 
 Mark
   *Continue with user level setting/session variables
   *Testing of the above
 
 Alyssa/Chris
   *The "Blob" 

   *Deliver a preproduction site to the redcross for them to nose around it.  Give them a login name that will not work on our test site.  
   *Organize a pre-spring break meeting (Thursday 2/19?).
   *Also schedule post-spring break release (3/19?).